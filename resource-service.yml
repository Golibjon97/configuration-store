server:
  port: 0

spring:
  servlet:
    multipart:
      max-file-size: 10MB
  application:
    name: resource-service
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
  datasource:
    password: ${DB_PASSWORD}
    username: ${DB_USERNAME}
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/resource_service}
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    topic:
      name: resource_id
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        spring:
          json:
            trusted:
              packages: "com.epam.*"
    consumer:
      group-id: resource-processor-id
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "com.epam.*"
            use:
              type:
                headers: false
          deserializer:
            value:
              delegate:
                class: org.apache.kafka.common.serialization.StringDeserializer

resilience4j:
  circuitbreaker:
    configs:
      default:
        register-health-indicator: true
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s
        permitted-number-of-calls-in-half-open-state: 2
        sliding-window-size: 10
        minimum-number-of-calls: 5
        wait-duration-in-open-state: 10s
    instances:
      storageService:
        base-config: default
        sliding-window-size: 5

io:
  reflectoring:
    aws:
      s3:
        bucket-name: resource-service-golibjon

management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    export:
      prometheus:
        enabled: true


