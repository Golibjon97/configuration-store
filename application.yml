spring:
  servlet:
    multipart:
      max-file-size: 10MB
  application:
    name: resource-service
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
  cloud:
    aws:
      credentials:
        access-key: ${AWS-ACCESS-KEY}
        secret-key: ${AWS-SECRET-KEY}
      region:
        static: us-east-1
  datasource:
    password: ${DB_PASSWORD}
    username: ${DB_USERNAME}
    url: jdbc:postgresql://localhost:5432/resource_service
  kafka:
    bootstrap-servers: localhost:9092
    topic:
      name: resource_id
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        spring:
          json:
            trusted:
              packages: "com.epam.*"
    consumer:
      group-id: resource-processor-id
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "com.epam.*"
            use:
              type:
                headers: false
          deserializer:
            value:
              delegate:
                class: org.apache.kafka.common.serialization.StringDeserializer
server:
  port: 0

eureka:
  instance:
    prefer-ip-address: false
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
    enabled: true

io:
  reflectoring:
    aws:
      s3:
        bucket-name: resource-service-golibjon